<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[笔记仓库]]></title>
  <link href="http://note.ptzzy.top/atom.xml" rel="self"/>
  <link href="http://note.ptzzy.top/"/>
  <updated>2017-09-17T22:43:58+08:00</updated>
  <id>http://note.ptzzy.top/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.coderforart.com/">CoderForArt</generator>

  
  <entry>
    <title type="html"><![CDATA[xinetd服务管理器]]></title>
    <link href="http://note.ptzzy.top/15010578989827.html"/>
    <updated>2017-07-26T16:31:38+08:00</updated>
    <id>http://note.ptzzy.top/15010578989827.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>xinetd服务，这个就相当于一个大管家<br/>
```<br/>
[root@backup ~]# cat /etc/xinetd.d/rsync </p>

<h1 id="toc_0">default: off</h1>

<h1 id="toc_1">description: The rsync server is a good addition to an ftp server, as it \</h1>

<h1 id="toc_2">allows crc checksumming etc.</h1>

<p>service rsync<br/>
{<br/>
    disable = yes<br/>
    flags       = IPv6<br/>
    socket_type     = stream<br/>
    wait            = no<br/>
    user            = root<br/>
    server          = /usr/bin/rsync<br/>
    server_args     = --daemon<br/>
    log_on_failure  += USERID<br/>
}<br/>
[root@backup ~]# sed -i &#39;s#yes#no#g&#39; /etc/xinetd.d/rsync<br/>
[root@backup ~]# cat /etc/xinetd.d/rsync </p>

<h1 id="toc_3">default: off</h1>

<h1 id="toc_4">description: The rsync server is a good addition to an ftp server, as it \</h1>

<h1 id="toc_5">allows crc checksumming etc.</h1>

<p>service rsync<br/>
{<br/>
    disable = no<br/>
    flags       = IPv6<br/>
    socket_type     = stream<br/>
    wait            = no<br/>
    user            = root<br/>
    server          = /usr/bin/rsync<br/>
    server_args     = --daemon<br/>
    log_on_failure  += USERID<br/>
}<br/>
[root@backup ~]# killall rsync<br/>
rsync: no process killed<br/>
[root@backup ~]# netstat -lntup|grep 873<br/>
[root@backup ~]# yum install xinetd -y<br/>
[root@backup ~]# /etc/init.d/xinetd start<br/>
Starting xinetd:                                           [  OK  ]<br/>
[root@backup ~]# netstat -lntup|grep 873<br/>
tcp        0      0 :::873                      :::*                        LISTEN      2296/xinetd<br/><br/>
[root@backup ~]# /etc/init.d/xinetd stop<br/>
Stopping xinetd:                                           [  OK  ]<br/>
[root@backup ~]# netstat -lntup|grep 873<br/>
[root@backup ~]# <br/>
```</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10. Linux默认文件系统,文件删除原理]]></title>
    <link href="http://note.ptzzy.top/15010702550739.html"/>
    <updated>2017-07-26T19:57:35+08:00</updated>
    <id>http://note.ptzzy.top/15010702550739.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[11. RAID 0 1 5 10原理、特点、性能区别，集群各角色如何选择]]></title>
    <link href="http://note.ptzzy.top/15010702612275.html"/>
    <updated>2017-07-26T19:57:41+08:00</updated>
    <id>http://note.ptzzy.top/15010702612275.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[12. 一致性哈西算法作用及原理]]></title>
    <link href="http://note.ptzzy.top/15010702692268.html"/>
    <updated>2017-07-26T19:57:49+08:00</updated>
    <id>http://note.ptzzy.top/15010702692268.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[13. 描述Linux下磁盘读写数据的原理，磁盘分区原理，默认文件系统工作原理]]></title>
    <link href="http://note.ptzzy.top/15010702778892.html"/>
    <updated>2017-07-26T19:57:57+08:00</updated>
    <id>http://note.ptzzy.top/15010702778892.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[14. 详细描述Linux权限管理体系]]></title>
    <link href="http://note.ptzzy.top/15010702850667.html"/>
    <updated>2017-07-26T19:58:05+08:00</updated>
    <id>http://note.ptzzy.top/15010702850667.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[15. 描述你维护过的大规模集群网站架构的设计原理]]></title>
    <link href="http://note.ptzzy.top/15010702959683.html"/>
    <updated>2017-07-26T19:58:15+08:00</updated>
    <id>http://note.ptzzy.top/15010702959683.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[01. DNS系统架构与解析原理]]></title>
    <link href="http://note.ptzzy.top/15010701752650.html"/>
    <updated>2017-07-26T19:56:15+08:00</updated>
    <id>http://note.ptzzy.top/15010701752650.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[02. http协议通信原理]]></title>
    <link href="http://note.ptzzy.top/15010701867065.html"/>
    <updated>2017-07-26T19:56:26+08:00</updated>
    <id>http://note.ptzzy.top/15010701867065.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[04. MySQL主从同步原理]]></title>
    <link href="http://note.ptzzy.top/15010701999479.html"/>
    <updated>2017-07-26T19:56:39+08:00</updated>
    <id>http://note.ptzzy.top/15010701999479.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[05. Nginx配合PHP工作fastcgi工作原理]]></title>
    <link href="http://note.ptzzy.top/15010702085430.html"/>
    <updated>2017-07-26T19:56:48+08:00</updated>
    <id>http://note.ptzzy.top/15010702085430.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[06. lvs的4种模式工作原理]]></title>
    <link href="http://note.ptzzy.top/15010702152705.html"/>
    <updated>2017-07-26T19:56:55+08:00</updated>
    <id>http://note.ptzzy.top/15010702152705.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[07. memcached工作原理(内存管理机制)]]></title>
    <link href="http://note.ptzzy.top/15010702209182.html"/>
    <updated>2017-07-26T19:57:00+08:00</updated>
    <id>http://note.ptzzy.top/15010702209182.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[08. keepalive高可用服务工作原理]]></title>
    <link href="http://note.ptzzy.top/15010702422822.html"/>
    <updated>2017-07-26T19:57:22+08:00</updated>
    <id>http://note.ptzzy.top/15010702422822.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[09. 详细描述CDN工作原理以及购买服务后解析操作步骤]]></title>
    <link href="http://note.ptzzy.top/15010702488190.html"/>
    <updated>2017-07-26T19:57:28+08:00</updated>
    <id>http://note.ptzzy.top/15010702488190.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[全网备份案例]]></title>
    <link href="http://note.ptzzy.top/15010886029579.html"/>
    <updated>2017-07-27T01:03:22+08:00</updated>
    <id>http://note.ptzzy.top/15010886029579.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">备份全网服务器数据生产架构方案案例模型</h2>

<pre><code>做一个周期性定时备份,要求如下:
每天网上00点整在web服务器A(web01)上打包备份网站程序目录,并通过rsync命令推送到服务器B(backup)上备份保留(备份思路:可以是先在本地按日期打包,然后再利用rsync推送到备份服务器上)
</code></pre>

<pre><code>具体要求如下:
1)web服务器A和备份服务器B的备份目录必须都为/backup
2)web服务器A站点目录假定为(/var/www/html)
3)web服务器A本地仅保留7天内的备份
4)备份服务器上[每周六的数据都保留],其他备份仅保留180天备份
5)备份服务器上检查备份结果是否正常,并将每天的备份结果发给管理员信箱
</code></pre>

<hr/>

<h2 id="toc_1">backup+web01</h2>

<h3 id="toc_2">一 backup是服务端</h3>

<pre><code>谁是rsync的服务端和客户端
</code></pre>

<hr/>

<h3 id="toc_3">二 搭建好rsync服务端和客户端,并且测试</h3>

<pre><code>服务端 -- backup   172.16.1.41
客户端 -- web01    172.16.1.8
</code></pre>

<hr/>

<h4 id="toc_4">服务端</h4>

<p>1.检查是否安装</p>

<pre><code>rpm -qa rsync
</code></pre>

<p>2.添加虚拟用户 rsync</p>

<pre><code>useradd -s /sbin/nologin -M rsync
id rsync        #检查是否添加成功
</code></pre>

<p>3.创建目录,并修改目录的属主与属组</p>

<pre><code>mkdir /backup
chown rsync.rsync /backup
</code></pre>

<p>4.创建密码文件并修改权限</p>

<pre><code>echo &#39;rsync_backup:123456&#39; &gt;/etc/rsync.password
chmod 600 /etc/rsync.password
</code></pre>

<p>5.创建配置文件</p>

<pre><code>cat /etc/rsyncd.conf
</code></pre>

<h4 id="toc_5">客户端</h4>

<p>创建密码文件并修改权限</p>

<pre><code>echo &#39;123456&#39; &gt;/etc/rsync.password
chmod 600 /etc/rsync.password
</code></pre>

<h3 id="toc_6">三 打包备份web01上面的数据</h3>

<blockquote>
<p>/var/www/html<br/>
/etc/rc.local<br/>
/etc/hosts<br/>
/var/spool/cron/</p>
</blockquote>

<p><code>创建本机备份目录</code></p>

<pre><code>mkdir -p /var/www/heml/ /backup
</code></pre>

<h4 id="toc_7">web01上面的备份命令</h4>

<pre><code>tar zchf /backup/conf-$(date +%F -d &quot;-1day&quot;).tar.gz /etc/rc.local
tar zchf /backup/html-$(date +%F -d &quot;-1day&quot;).tar.gz /var/www/html
</code></pre>

<h3 id="toc_8">四 验证web01-md5sum-给压缩包加上指纹</h3>

<p><code>手动指定文件 创建指纹</code></p>

<pre><code>md5sum conf-$(date +%F-d &quot;-1day&quot;).tar.gz
</code></pre>

<p><code>根据find命令找到的文件 创建指纹</code></p>

<pre><code>find /backup/ -type f -name &quot;*.tar.gz&quot;

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[期中架构之前复习考试]]></title>
    <link href="http://note.ptzzy.top/15013178849284.html"/>
    <updated>2017-07-29T16:44:44+08:00</updated>
    <id>http://note.ptzzy.top/15013178849284.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">目录</h1>

<ul>
<li>
<a href="#toc_0">目录</a>
<ul>
<li>
<a href="#toc_1">01. 向oldboy.txt加入内容 &quot;I love studying Linux.&quot; (不少于3种方法)</a>
</li>
<li>
<a href="#toc_2">02. 说说这些特殊符号含义:  </a>
</li>
<li>
<a href="#toc_3">03. 要求在使用rm命令的时候提示command not found,如何实现？</a>
</li>
<li>
<a href="#toc_4">04. 查找出/data目录下所有以.txt结尾的文件，并且把文件中的trainning修改为oldboy.</a>
</li>
<li>
<a href="#toc_5">05. test.txt文件内容如下，要求输出时候不显示trainning。(最少3中方法)</a>
</li>
<li>
<a href="#toc_6">06. 查找/oldboy目录下所有7天以前的，以log结尾的，并且大于1M的文件，把这些文件移动到/tmp下.</a>
</li>
<li>
<a href="#toc_7">07. 写定时任务,每天晚上12点删除/var/spool/postfix/maildrop/ 目录下7天以前的文件。</a>
</li>
<li>
<a href="#toc_8">08. 如何查看是否开启22，及查看sshd进程是否存在？</a>
</li>
<li>
<a href="#toc_9">09. 列举出linux常用打包压缩工具及其压缩解压参数。</a>
</li>
<li>
<a href="#toc_10">10. 将/etc/目录打包压缩放在/backup目录，并且要求每天备份的文件名不同，请问如何做？</a>
</li>
<li>
<a href="#toc_11">11. 让linux开机自启动某个软件/服务有哪些方法？</a>
</li>
<li>
<a href="#toc_12">12. 如果向磁盘写入数据提示如下错误：No space left on device，通过df -h查看磁盘空间，发现没满，请问可能原因是什么？ </a>
</li>
<li>
<a href="#toc_13">13. 批量创建10个用户stu01-stu10，并且设置随机 8位密码，位密码，要求不能用shell循环（例如：for,while等），只能用命令及管道实现</a>
</li>
<li>
<a href="#toc_14">14. 添加一个用户mysql指定uid为888，禁止登陆并且不创建家目录</a>
</li>
<li>
<a href="#toc_15">15. 请说出linux系统从开机打开电源到进入登录界面整个过程。</a>
</li>
</ul>
</li>
<li>
<a href="#toc_16">16. Sed考试题</a>
<ul>
<li>
<a href="#toc_17"><strong>文件内容如下：</strong></a>
</li>
<li>
<a href="#toc_18">16.1. 删除文件中的空行及#号开头的行（sed命令）</a>
</li>
<li>
<a href="#toc_19">16.2. 替换shutdown为SHUTDOWN</a>
</li>
<li>
<a href="#toc_20">16.3. 删除头三行</a>
</li>
</ul>
</li>
<li>
<a href="#toc_21">17. Shell面试题：根据题意写出对应表达式。</a>
<ul>
<li>
<a href="#toc_22">17.1. 判断/data目录是否存在，存在则进入目录并查看文件属性。</a>
</li>
<li>
<a href="#toc_23">17.2. 判断/etc/hosts文件是否存在，存在则将文件复制到/tmp目录下。</a>
</li>
</ul>
</li>
</ul>


<h2 id="toc_1">01. 向oldboy.txt加入内容 &quot;I love studying Linux.&quot; (不少于3种方法)</h2>

<p>方法一</p>

<pre><code>[root@oldboy38niubility ~]# vim oldboy
I love studying Linux.
~                                                                                                                        
~                                                                                                                                                                                                                                           
~                                                                                                                        
&quot;oldboy&quot; [New] 1L, 23C written
</code></pre>

<p>方法二</p>

<pre><code>[root@oldboy38niubility ~]# echo &quot;I love studying Linux.&quot; &gt; oldboy.txt 
[root@oldboy38niubility ~]# cat oldboy.txt 
I love studying Linux.
</code></pre>

<p>方法三</p>

<pre><code>[root@oldboy38niubility ~]# cat &gt; oldboy.txt &lt;&lt;EOF
&gt; I love studying Linux.
&gt; EOF
[root@oldboy38niubility ~]# cat oldboy.txt 
I love studying Linux.
</code></pre>

<h2 id="toc_2">02. 说说这些特殊符号含义:  </h2>

<p><code>~  .  ..  |  &gt;  &gt;&gt;  &lt;  &lt;&lt;  #</code></p>

<pre><code>~   当前用户的家目录
.   表示当前目录（位置）
..  表示当前目录（位置）的上一级目录（位置）
|   管道符 把管道前面执行完的结果交给管道后面的命令处理
&gt;   输出重定向
&gt;&gt;  追加输出重定向
&lt;   输入重定向
&lt;&lt;  追加输入重定向
#   注释符号
</code></pre>

<h2 id="toc_3">03. 要求在使用rm命令的时候提示command not found,如何实现？</h2>

<p><code>临时生效:</code></p>

<pre><code>alias rm=&#39;echo rm command is not allowed to use&#39;
</code></pre>

<p><code>永久生效:</code></p>

<pre><code>echo &quot;alias rm=&#39;echo rm command is not allowed to use&#39;&quot; &gt;&gt; /etc/profile
source /etc/profile
</code></pre>

<h2 id="toc_4">04. 查找出/data目录下所有以.txt结尾的文件，并且把文件中的trainning修改为oldboy.</h2>

<pre><code>find /data -type f -name &quot;*.txt&quot;|xargs sed &quot;s#trainning#oldboy#g&quot;
</code></pre>

<h2 id="toc_5">05. test.txt文件内容如下，要求输出时候不显示trainning。(最少3中方法)</h2>

<p><code>trainning<br/>
fanbingbing<br/>
oldboy</code></p>

<pre><code>方法一
tail -2 test.txt
方法二
egrep -v trainning test.txt
方法三
sed -n &#39;2,3p&#39; test.txt
方法四
sed &#39;1d&#39; test.txt
方法五
sed &#39;/trainning/d&#39; test.txt
方法六
awk &#39;/trainning/d&#39; test.txt
</code></pre>

<h2 id="toc_6">06. 查找/oldboy目录下所有7天以前的，以log结尾的，并且大于1M的文件，把这些文件移动到/tmp下.</h2>

<pre><code>find /oldboy -type d -mtime +7 -name &quot;*log&quot; -size +1M |xargs mv -t /tmp
</code></pre>

<h2 id="toc_7">07. 写定时任务,每天晚上12点删除/var/spool/postfix/maildrop/ 目录下7天以前的文件。</h2>

<pre><code>cd /server/scripts/
vim del.sh
find /var/spool/postfix/maildrop -type f -mtime +7 |xargs \rm -rf
  :wq!
crontab -e 
00 00 * * * /bin/sh     /server/scripts/del.sh &amp;&gt;/dev/null
</code></pre>

<h2 id="toc_8">08. 如何查看是否开启22，及查看sshd进程是否存在？</h2>

<pre><code>netstat -lntup|grep 22
ss -lntup|grep 22
ps -ef|grep sshd
</code></pre>

<h2 id="toc_9">09. 列举出linux常用打包压缩工具及其压缩解压参数。</h2>

<pre><code>压缩 tar zcf    解压 tar xf
-z  gunzip 压缩
-c  create
-f  file
-x 解压
-c 指定压缩路径
-t list 查看
-P 取消自动去掉/的功能
--exclude 排除
</code></pre>

<h2 id="toc_10">10. 将/etc/目录打包压缩放在/backup目录，并且要求每天备份的文件名不同，请问如何做？</h2>

<pre><code>tar -zcf /backup/etc.$(date +%F).tar.gz  /etc
</code></pre>

<h2 id="toc_11">11. 让linux开机自启动某个软件/服务有哪些方法？</h2>

<pre><code>###第一个里程碑  进入服务管理文件夹 创建一个脚本并给予执行权限X
[root@oldboy38niubility ~]# cd /etc/init.d/
[root@oldboy38niubility init.d]# touch xzp
[root@oldboy38niubility init.d]# chmod +x xzp
###第二个里程碑  编辑脚本 添加 给予运行级别2345 和开启17 关闭顺序95
[root@oldboy38niubility init.d]# vim xzp
#!/bin/bash
# chkconfig: 2345 17 95
# description: xzp service
echo xzp
~                                                                                                                    
~                                                                                                                        
~                                                                                                                        
&quot;xzp&quot; 4L, 72C written~    
####第三个里程碑   把创建好的脚本通过chkconfig --add 添加到chkconfig 里
[root@oldboy38niubility init.d]# chkconfig --add xzp  
####第四个里程碑    测试重启xzp服务
[root@oldboy38niubility init.d]# /etc/init.d/xzp restart
xzp
[root@oldboy38niubility init.d]#chkconfig xzp on
####第五个里程碑  list查看xzp服务
[root@oldboy38niubility init.d]# chkconfig --list|grep xzp
xzp             0:off   1:off   2:on    3:on    4:on    5:on    6:off    
</code></pre>

<h2 id="toc_12">12. 如果向磁盘写入数据提示如下错误：No space left on device，通过df -h查看磁盘空间，发现没满，请问可能原因是什么？ </h2>

<pre><code>inode 满了
</code></pre>

<h2 id="toc_13">13. 批量创建10个用户stu01-stu10，并且设置随机 8位密码，位密码，要求不能用shell循环（例如：for,while等），只能用命令及管道实现</h2>

<pre><code>echo stu{01..10}|xargs -n1|sed &#39;s#.*#useradd &amp;;uuidgen|cut -c -8&gt;/passwd&amp;.txt;cat /passwd&amp;.txt|password --stdin &amp; &gt;/dev/null 2&gt;\&amp;1#g&#39;|bash
</code></pre>

<h2 id="toc_14">14. 添加一个用户mysql指定uid为888，禁止登陆并且不创建家目录</h2>

<pre><code>useradd -u 888 -s /sbin/nologin -M mysql
</code></pre>

<h2 id="toc_15">15. 请说出linux系统从开机打开电源到进入登录界面整个过程。</h2>

<pre><code>电源打开
BIOS自检
MBR引导
GRUB菜单
内核加载kernel
运行init进程
读取/etc/inittab配置文件
执行/etc/rc.d/rc.sysinit脚本
执行/etc/rc.d/rc3.d脚本根据运行级别定一般为3文本模式
启动mingetty进程进入系统登录界面
</code></pre>

<h1 id="toc_16">16. Sed考试题</h1>

<h2 id="toc_17"><strong>文件内容如下：</strong></h2>

<pre><code>[root@oldboyedu ~]# cat /tmp/passwd
root:x:0: 0:root:/root:/bin/bash

bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin

lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin

sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
</code></pre>

<h2 id="toc_18">16.1. 删除文件中的空行及#号开头的行（sed命令）</h2>

<pre><code>sed -r &quot;^$|^#&quot; /tmp/passwd -i
</code></pre>

<h2 id="toc_19">16.2. 替换shutdown为SHUTDOWN</h2>

<pre><code>sed -i &#39;#shutdown#SHUTDOWN#&#39; /tmp/passwd
</code></pre>

<h2 id="toc_20">16.3. 删除头三行</h2>

<pre><code>sed &#39;1,3d&#39; /tmp/passwd -i
</code></pre>

<h1 id="toc_21">17. Shell面试题：根据题意写出对应表达式。</h1>

<h2 id="toc_22">17.1. 判断/data目录是否存在，存在则进入目录并查看文件属性。</h2>

<pre><code>[ -d /data ] &amp;&amp;cd /data&amp;&amp;ls -lh
</code></pre>

<h2 id="toc_23">17.2. 判断/etc/hosts文件是否存在，存在则将文件复制到/tmp目录下。</h2>

<pre><code>[ -f /etc/hosts ] &amp;&amp; cp /etc/hosts /tmp
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[inotifywait]]></title>
    <link href="http://note.ptzzy.top/15017603290224.html"/>
    <updated>2017-08-03T19:38:49+08:00</updated>
    <id>http://note.ptzzy.top/15017603290224.html</id>
    <content type="html"><![CDATA[
<p>等待文件或文件集上的特定事件。</p>

<p>用法：inotifywait [options] file1 [file2] [file3] [...]</p>

<p>选项：</p>

<p>-h|--help<br/>
        显示此帮助文本。<br/>
@<file><br/>
        排除指定的文件被监视。<br/>
--exclude <pattern><br/>
        排除与扩展正则表达式<pattern>匹配的文件上的所有事件。<br/>
--excludei <pattern><br/>
        连接--exclude但不区分大小写。<br/>
-m|-monitor<br/>
        继续聆听事件。 如果没有这个选项，inotifywait将在收到一个事件后退出。<br/>
-d|--daemon<br/>
        与--monitor相同，除了在后台运行将事件记录到由-outfile指定的文件。<br/>
        包含 - 日志。<br/>
-r|--recursive<br/>
        递归地观看目录。<br/>
--fromfile <file><br/>
        从<file>读取文件，或者使用` - &#39;查看stdin文件。<br/>
-o|--outfile <file><br/>
        将事件打印到<file>而不是stdout。<br/>
-s|--syslog<br/>
        将错误发送到syslog而不是stderr。<br/>
-q|--quiet<br/>
        打印少（仅打印事件）。<br/>
-qq<br/>
        不打印（甚至没有事件）。<br/>
--format <fmt><br/>
        使用指定的类似printf的格式字符串打印; 阅读手册页了解更多详情。<br/>
--timefmt <fmt><br/>
        与strftime兼容的格式字符串用于 ％T in --format字符串。<br/>
-c | --csv<br/>
        以CSV格式打印事件。<br/>
-t | --timeout <seconds><br/>
        当侦听到单个事件时，等待事件&lt;秒&gt;秒后超时。<br/>
        如果<seconds>为0，inotifywait永远不会超时。<br/>
-e | --event <event1> [-e | --event <event2> ...]<br/>
        侦听定事件。如果省略，则会收听所有事件。<br/>
退出状态：</p>

<p>0 - 收到您要求的事件。<br/>
1 - 您没有要求观看的活动已收到（通常为delete_self或unmount），或发生一些错误。<br/>
2 - 给定了--timeout选项，在指定的时间间隔内没有发生任何事件。<br/>
事件：</p>

<p>access              文件或目录内容被读取<br/>
modify              文件或目录内容已写入<br/>
attrib              文件或目录属性已更改<br/>
close_write         文件或目录在可写模式下打开后关闭<br/>
close_nowrite       文件或目录在只读模式下打开后关闭<br/>
close               文件或目录关闭，无论读/写模式如何<br/>
open                文件或目录打开<br/>
moved_to            文件或目录移动到监视目录<br/>
moved_from          文件或目录从监视目录中移动<br/>
move                文件或目录移动到或从监视目录移动<br/>
create              在监视目录中创建的文件或目录<br/>
delete              在监视目录中删除的文件或目录<br/>
delete_self         文件或目录已被删除<br/>
unmount             包含已卸载文件或目录的文件系统</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[web服务基础]]></title>
    <link href="http://note.ptzzy.top/15020372614069.html"/>
    <updated>2017-08-07T00:34:21+08:00</updated>
    <id>http://note.ptzzy.top/15020372614069.html</id>
    <content type="html"><![CDATA[
<ol>
<li>http服务的重要基础

<ol>
<li>用户访问网站基本流程</li>
<li>DNS系统解析基本流程

<ol>
<li>DNS简介</li>
<li>DNS解析流程</li>
</ol></li>
</ol></li>
<li>http协议

<ol>
<li>http协议简介</li>
<li>http协议版本

<ol>
<li>http/1.0简介</li>
<li>http/1.1简介</li>
</ol></li>
<li>http请求方法</li>
<li>http状态码

<ol>
<li>http状态码介绍</li>
<li>http状态码的命令行查看</li>
</ol></li>
<li>http报文

<ol>
<li>http请求报文(request message)介绍</li>
<li>http响应报文(response message)介绍</li>
<li>一个简单的请求报文和应答报文示例</li>
</ol></li>
<li>http协议原理及重点分析</li>
</ol></li>
<li>http资源

<ol>
<li>媒体类型</li>
<li>URL介绍</li>
<li>URI介绍</li>
<li>静态网页资源

<ol>
<li>静态网页资源介绍</li>
<li>静态网页资源特点</li>
<li>静态网页语言</li>
<li>有关静态网页的架构思想</li>
</ol></li>
<li>动态网页资源

<ol>
<li>动态网页资源介绍</li>
<li>动态网页资源特点</li>
<li>有关动态网页的架构思想</li>
</ol></li>
<li>伪静态网页

<ol>
<li>伪静态网页资源介绍</li>
<li>伪静态网页资源特点</li>
<li>伪静态网页作用</li>
<li>伪静态网页的缺点</li>
<li>伪静态网页小结</li>
</ol></li>
<li>生产web架构优化实战方案

<ol>
<li>门户新闻业务</li>
<li>视频网站业务</li>
<li>blog/BBS/SNS/微博社区业务/电商(如淘宝、京东)</li>
</ol></li>
</ol></li>
<li>网站流量度量术语

<ol>
<li>IP</li>
<li>PV</li>
<li>UV</li>
<li>企业网站对IP、PV、UV的度量

<ol>
<li>对IP的度量</li>
<li>对PV的度量</li>
<li>对UV的度量</li>
</ol></li>
<li>IP、PV、UV的区别</li>
<li>并发连接

<ol>
<li>网站并发连接</li>
<li>其他服务并发连接</li>
</ol></li>
<li>常见企业网站排名及PV/IP访问量</li>
<li>有关网站度量Linux企业运维的常见面试题</li>
</ol></li>
<li>WWW服务软件介绍

<ol>
<li>WWW软件全球使用排名参考</li>
<li>当前互联网主流web服务说明

<ol>
<li>当前互联网主流web服务软件</li>
<li>常用来提供动态服务的软件</li>
</ol></li>
<li>WWW静态程序服务软件Apache</li>
<li>WWW静态服务软件Nginx</li>
<li>WWW动态服务软件resin</li>
<li>WWW动态服务软件Tomcat</li>
<li>WWW动态服务软件PHP</li>
</ol></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ansible常用模块汇总]]></title>
    <link href="http://note.ptzzy.top/15021011169868.html"/>
    <updated>2017-08-07T18:18:36+08:00</updated>
    <id>http://note.ptzzy.top/15021011169868.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>Ansible通过模块的方式来完成一些远程的管理工作。可以通过ansible-doc -l查看所有模块，可以使用ansible-doc -s module来查看某个模块的参数具体用法，也可以使用ansible-doc help module来查看该模块更详细的信息。</p>
</blockquote>

<h2 id="toc_0">setup</h2>

<p>可以用来收集远程主机的一些基本信息：</p>

<pre><code>ansible -i /etc/ansible/hosts test -m setup
</code></pre>

<h2 id="toc_1">ping</h2>

<p>可以用来测试远程主机的运行状态：</p>

<pre><code>ansible test -m ping
</code></pre>

<h2 id="toc_2">file</h2>

<p>设置文件的属性<br/>
file模块包含如下选项：</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>force</td>
<td>需要在两种情况下强制创建软链接，一种是源文件不存在但之后会建立的情况下；另一种是目标软链接已存在,需要先取消之前的软链，然后创建新的软链，有两个选项：yes</td>
</tr>
<tr>
<td>group</td>
<td>定义文件/目录的属组</td>
</tr>
<tr>
<td>mode</td>
<td>定义文件/目录的权限</td>
</tr>
<tr>
<td>owner</td>
<td>定义文件/目录的属主</td>
</tr>
<tr>
<td>path</td>
<td>必选项，定义文件/目录的路径</td>
</tr>
<tr>
<td>recurse</td>
<td>递归的设置文件的属性，只对目录有效</td>
</tr>
<tr>
<td>src</td>
<td>要被链接的源文件的路径，只应用于state=link的情况</td>
</tr>
<tr>
<td>dest</td>
<td>被链接到的路径，只应用于state=link的情况</td>
</tr>
</tbody>
</table>

<p>state:</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>directory</td>
<td>如果目录不存在，创建目录</td>
</tr>
<tr>
<td>file</td>
<td>即使文件不存在，也不会被创建</td>
</tr>
<tr>
<td>link</td>
<td>创建软链接</td>
</tr>
<tr>
<td>hard</td>
<td>创建硬链接</td>
</tr>
<tr>
<td>touch</td>
<td>如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间</td>
</tr>
<tr>
<td>absent</td>
<td>删除目录、文件或者取消链接文件</td>
</tr>
</tbody>
</table>

<p>示例：</p>

<pre><code> ansible test -m file -a &quot;src=/etc/fstab dest=/tmp/fstab state=link&quot;
 ansible test -m file -a &quot;path=/tmp/fstab state=absent&quot;
 ansible test -m file -a &quot;path=/tmp/test state=touch&quot;
 ansible test -m file -a &quot;path=/tmp/test state=directory&quot;
 ansible test -m file -a &quot;path=/tmp/testd state=directory owner=root group=root mode=777&quot;
</code></pre>

<h2 id="toc_3">copy</h2>

<p>复制文件到远程主机<br/>
copy模块包含如下选项：</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>backup</td>
<td>在覆盖之前将原文件备份，备份文件包含时间信息。有两个选项：yes|no</td>
</tr>
<tr>
<td>content</td>
<td>用于替代&quot;src&quot;,可以直接设定指定文件的值</td>
</tr>
<tr>
<td>dest</td>
<td>必选项。要将源文件复制到的远程主机的绝对路径，如果源文件是一个目录，那么该路径也必须是个目录</td>
</tr>
<tr>
<td>directory_mode</td>
<td>递归的设定目录的权限，默认为系统默认权限</td>
</tr>
<tr>
<td>force</td>
<td>如果目标主机包含该文件，但内容不同，如果设置为yes，则强制覆盖，如果为no，则只有当目标主机的目标位置不存在该文件时，才复制。默认为yes</td>
</tr>
<tr>
<td>others</td>
<td>所有的file模块里的选项都可以在这里使用</td>
</tr>
<tr>
<td>src</td>
<td>要复制到远程主机的文件在本地的地址，可以是绝对路径，也可以是相对路径。如果路径是一个目录，它将递归复制。在这种情况下，如果路径使用&quot;/&quot;来结尾，则只复制目录里的内容，如果没有使用&quot;/&quot;来结尾，则包含目录在内的整个内容全部复制，类似于rsync。</td>
</tr>
<tr>
<td>validate</td>
<td>The validation command to run before copying into place. The path to the file to validate is passed in via &#39;%s&#39; which must be present as in the visudo example below.</td>
</tr>
</tbody>
</table>

<p>示例：</p>

<pre><code> ansible test -m copy -a &quot;src=/srv/myfiles/foo.conf dest=/etc/foo.conf owner=foo group=foo mode=0644&quot;
 ansible test -m copy -a &quot;src=/mine/ntp.conf dest=/etc/ntp.conf owner=root group=root mode=644 backup=yes&quot;
 ansible test -m copy -a &quot;src=/mine/sudoers dest=/etc/sudoers validate=&#39;visudo -cf %s&#39;&quot;
</code></pre>

<h2 id="toc_4">command</h2>

<p>在远程主机上执行命令<br/>
command模块包含如下选项：</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>creates</td>
<td>一个文件名，当该文件存在，则该命令不执行</td>
</tr>
<tr>
<td>free_form</td>
<td>要执行的linux指令</td>
</tr>
<tr>
<td>chdir</td>
<td>在执行指令之前，先切换到该指定的目录</td>
</tr>
<tr>
<td>removes</td>
<td>一个文件名，当该文件不存在，则该选项不执行</td>
</tr>
<tr>
<td>executable</td>
<td>切换shell来执行指令，该执行路径必须是一个绝对路径</td>
</tr>
</tbody>
</table>

<p>示例：</p>

<pre><code> ansible test -a &quot;ls /root&quot;
</code></pre>

<h2 id="toc_5">shell</h2>

<p>切换到某个shell执行指定的指令，参数与command相同。</p>

<p>示例：</p>

<pre><code> ansible test -m shell -a &quot;somescript.sh &gt;&gt; somelog.txt&quot;
</code></pre>

<h2 id="toc_6">service</h2>

<p>用于管理服务<br/>
该模块包含如下选项：</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>arguments</td>
<td>给命令行提供一些选项</td>
</tr>
<tr>
<td>enabled</td>
<td>是否开机启动 yes</td>
</tr>
<tr>
<td>name</td>
<td>必选项，服务名称</td>
</tr>
<tr>
<td>pattern</td>
<td>定义一个模式，如果通过status指令来查看服务的状态时，没有响应，就会通过ps指令在进程中根据该模式进行查找，如果匹配到，则认为该服务依然在运行</td>
</tr>
<tr>
<td>runlevel</td>
<td>运行级别</td>
</tr>
<tr>
<td>sleep</td>
<td>如果执行了restarted，在则stop和start之间沉睡几秒钟</td>
</tr>
<tr>
<td>state</td>
<td>对当前服务执行启动，停止、重启、重新加载等操作（started,stopped,restarted,reloaded）</td>
</tr>
</tbody>
</table>

<p>示例：</p>

<pre><code> ansible test -m service -a &quot;name=httpd state=started enabled=yes&quot;
 ansible test -m service -a &quot;name=foo pattern=/usr/bin/foo state=started&quot;
 ansible test -m service -a &quot;name=network state=restarted args=eth0&quot;
</code></pre>

<h2 id="toc_7">cron</h2>

<p>用于管理计划任务<br/>
包含如下选项：</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>backup</td>
<td>对远程主机上的原任务计划内容修改之前做备份</td>
</tr>
<tr>
<td>cron_file</td>
<td>如果指定该选项，则用该文件替换远程主机上的cron.d目录下的用户的任务计划</td>
</tr>
<tr>
<td>day</td>
<td>日（1-31，[i]，[/i]/2,……）</td>
</tr>
<tr>
<td>hour</td>
<td>小时（0-23，[i]，[/i]/2，……）</td>
</tr>
<tr>
<td>minute</td>
<td>分钟（0-59，[i]，[/i]/2，……）</td>
</tr>
<tr>
<td>month</td>
<td>月（1-12，[i]，[/i]/2，……）</td>
</tr>
<tr>
<td>weekday</td>
<td>周（0-7，*，……）</td>
</tr>
<tr>
<td>job</td>
<td>要执行的任务，依赖于state=present</td>
</tr>
<tr>
<td>name</td>
<td>该任务的描述</td>
</tr>
<tr>
<td>special_time</td>
<td>指定什么时候执行，参数：reboot,yearly,annually,monthly,weekly,daily,hourly</td>
</tr>
<tr>
<td>state</td>
<td>确认该任务计划是创建还是删除</td>
</tr>
<tr>
<td>user</td>
<td>以哪个用户的身份执行</td>
</tr>
</tbody>
</table>

<p>示例：</p>

<pre><code> ansible test -m cron -a &#39;name=&quot;check dirs&quot; hour=&quot;5,2&quot; job=&quot;ls -alh &gt; /dev/null&quot;&#39;
 ansible test -m cron -a &#39;name=&quot;a job for reboot&quot; special_time=reboot job=&quot;/some/job.sh&quot;&#39;
 ansible test -m cron -a &#39;name=&quot;yum autoupdate&quot; weekday=&quot;2&quot; minute=0 hour=12 user=&quot;root&quot; job=&quot;YUMINTERACTIVE=0 /usr/sbin/yum-autoupdate&quot; cron_file=ansible_yum-autoupdate&#39;
 ansilbe test -m cron -a &#39;cron_file=ansible_yum-autoupdate state=absent&#39;
</code></pre>

<h2 id="toc_8">filesystem</h2>

<p>在块设备上创建文件系统<br/>
选项：</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>dev</td>
<td>目标块设备</td>
</tr>
<tr>
<td>force</td>
<td>在一个已有文件系统的设备上强制创建</td>
</tr>
<tr>
<td>fstype</td>
<td>文件系统的类型</td>
</tr>
<tr>
<td>opts</td>
<td>传递给mkfs命令的选项</td>
</tr>
</tbody>
</table>

<h2 id="toc_9">user</h2>

<p>管理用户</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>home</td>
<td></td>
</tr>
<tr>
<td>groups</td>
<td></td>
</tr>
<tr>
<td>uid</td>
<td></td>
</tr>
<tr>
<td>password</td>
<td></td>
</tr>
<tr>
<td>name</td>
<td></td>
</tr>
<tr>
<td>createhome</td>
<td></td>
</tr>
<tr>
<td>system</td>
<td></td>
</tr>
<tr>
<td>remove</td>
<td></td>
</tr>
<tr>
<td>state</td>
<td></td>
</tr>
<tr>
<td>shell</td>
<td></td>
</tr>
</tbody>
</table>

<blockquote>
<p>需要特别说明的是，password后面指定的密码不能是明文，后面这一串密码会被直接传送到被管理主机的/etc/shadow文件中，而登陆的时候输入的密码会被hash加密以后再去与/etc/shadow中存放的密码去做对比，会出现不一致的现象。所以需要先将密码字符串进行加密处理：openssl passwd -salt -1 &quot;123456&quot;，然后将得到的字符串放到password中即可。</p>
</blockquote>

<h2 id="toc_10">synchronize</h2>

<p>使用rsync同步文件</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>archive</td>
<td></td>
</tr>
<tr>
<td>checksum</td>
<td></td>
</tr>
<tr>
<td>delete</td>
<td></td>
</tr>
<tr>
<td>dest</td>
<td></td>
</tr>
<tr>
<td>src</td>
<td></td>
</tr>
<tr>
<td>dest_port</td>
<td></td>
</tr>
<tr>
<td>existing_only</td>
<td>skip createing new files on receiver</td>
</tr>
<tr>
<td>links</td>
<td></td>
</tr>
<tr>
<td>owner</td>
<td></td>
</tr>
<tr>
<td>mode</td>
<td>(push, pull)</td>
</tr>
<tr>
<td>recursive</td>
<td></td>
</tr>
<tr>
<td>rsync_path</td>
<td></td>
</tr>
<tr>
<td>times</td>
<td>Preserve modification times</td>
</tr>
</tbody>
</table>

<p>示例：</p>

<pre><code> src=some/relative/path dest=/some/absolute/path rsync_path=&quot;sudo rsync&quot;
 src=some/relative/path dest=/some/absolute/path archive=no links=yes
 src=some/relative/path dest=/some/absolute/path checksum=yes times=no
 src=/tmp/helloworld dest=/var/www/helloword rsync_opts=--no-motd,--exclude=.git mode=pull
</code></pre>

<h2 id="toc_11">mount</h2>

<p>配置挂载点<br/>
选项：</p>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>dump</td>
<td></td>
</tr>
<tr>
<td>fstype</td>
<td>必选项，挂载文件的类型</td>
</tr>
<tr>
<td>name</td>
<td>必选项，挂载点</td>
</tr>
<tr>
<td>opts</td>
<td>传递给mount命令的参数</td>
</tr>
<tr>
<td>passno</td>
<td></td>
</tr>
<tr>
<td>src</td>
<td>必选项，要挂载的文件</td>
</tr>
<tr>
<td>state</td>
<td>必选项</td>
</tr>
<tr>
<td>present</td>
<td>只处理fstab中的配置</td>
</tr>
<tr>
<td>absent</td>
<td>删除挂载点</td>
</tr>
<tr>
<td>mounted</td>
<td>自动创建挂载点并挂载之</td>
</tr>
<tr>
<td>umounted</td>
<td>卸载</td>
</tr>
</tbody>
</table>

<p>示例：</p>

<pre><code> name=/mnt/dvd src=/dev/sr0 fstype=iso9660 opts=ro state=present
 name=/srv/disk src=&#39;LABEL=SOME_LABEL&#39; state=present
 name=/home src=&#39;UUID=b3e48f45-f933-4c8e-a700-22a159ec9077&#39; opts=noatime state=present

 ansible test -a &#39;dd if=/dev/zero of=/disk.img bs=4k count=1024&#39;
 ansible test -a &#39;losetup /dev/loop0 /disk.img&#39;
 ansible test -m filesystem &#39;fstype=ext4 force=yes opts=-F dev=/dev/loop0&#39;
 ansible test -m mount &#39;name=/mnt src=/dev/loop0 fstype=ext4 state=mounted opts=rw&#39;
</code></pre>

<h2 id="toc_12">raw</h2>

<p>类似command，可以传递管道</p>

]]></content>
  </entry>
  
</feed>
